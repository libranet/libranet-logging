# Important notes regarding this .env-file:
#
#   - For more information about .env-files, please see
#     https://smartmob-rfc.readthedocs.io/en/latest/2-dotenv.html
#
#   - Use blank lines for spacing.
#
#   - Comments start with # and always start beginning-of-line (BOL).
#     Inline comments are NOT supported and will break the syntax.
#
#   - Place your secrets and passwords here, but do not commit this file back to any repository.
#     Also avoid transmitting these secrets to other people in plain-text.
#
#   - Most python-interpreter related env-variables will need to be set/sourced *before* the python-interpreter starts
#     Reading them via sitecustomize.py comes too late, since the python-process has already started.
#
#   - Use bash-compatible variable-assigment-syntax: FOO='BAR'
#     To preserve bash-compatibility, never use spaces around the equal-operator, so don't use FOO = 'BAR'.
#     Always single-quote the values to preserve the literal value of each character. For example if a
#     password contains backslashes, those should be treated as literal values, and not as escape-characters
#     like when double-quoting. So always use FOO='BAR', not FOO=BAR nor FOO="BAR".
#     TODO: docker breaks when using quotes.
#
#   - Standard env-variables only support string-types. However in python we can easily parse strings into
#     other types like lists. For example FOO='BAR|BAZ', we can string-parse into FOO=["BAR", "BAZ"].
#
#   - In bash, you can directly source this file to load all these env-var in your current bash-session:
#     >>> set -a && source .env && set +a
#     Usability-tip: Add following alias to your ~/.bashrc
#     >> alias source-env='set -a && source .env && set +a'

### project- directory-structure ###
# use double quotes if you use this in variable subtitutions
BASE_DIR="__CWD__"
PROJECT_NAME='libranet-logging'
IPYTHONDIR="__CWD__/etc/ipython"

# caching
# MYPY_CACHE_DIR, PYTEST_CACHE_DIR, RUFF_CACHE_DIR defined in pyproject.toml
CACHE_DIR="__CWD__/var/cache/"
BLACK_CACHE_DIR="__CWD__/var/cache/black"
IPYTHON_CACHE_DIR="__CWD__/var/cache/ipython"
PRE_COMMIT_HOME="__CWD__/var/cache/pre-commit"
PYLINTHOME="__CWD__/var/cache/pylint"

# tmp
TMP="__CWD__/var/tmp"
TMPDIR="__CWD__/var/tmp"
TEMP="__CWD__/var/tmp"
TEMPDIR="__CWD__/var/tmp"

# debugging
# used by python-interpreter, cfr. https://docs.python.org/3/using/cmdline.html#environment-variables
# used by ipdb / remote-pdb - cfr https://pypi.org/project/remote-pdb + cfr https://pypi.org/project/ipdb
# PYTHONBREAKPOINT='pdb.set_trace'
PYTHONBREAKPOINT='ipdb.set_trace'

# logging - used in libranet-logging & logging.yaml
# Supported values for logging, from lowest to highest priority: LOGLEVEL_XXX: NOTSET|TRACE|DEBUG|INFO|WARNING|ERROR
LOG_DIR="__CWD__/var/log"
LOGGING_YML_FILE="__CWD__/etc/logging.yaml"
# LOGGING_CFG="__CWD__/etc/logging.yaml"

PYTHON_CONSOLE_FORMATTER='console_color'
LIBRANET_LOGGING_SEPARATOR='|'
LOG_HANDLERS="console|debug_file|info_file|warning_file|error_file"
LOGLEVEL_ROOT='NOTSET'
LOGLEVEL_ASYNCIO='NOTSET'
LOGLEVEL_BLIB2TO3='INFO'
LOGLEVEL_DEMO_FLASK='NOTSET'
LOGLEVEL_FLASK_CORS='NOTSET'
LOGLEVEL_GUNICORN='NOTSET'
LOGLEVEL_HTTP_CLIENT='INFO'
LOGLEVEL_LIBRANET_LOGGING='INFO'
LOGLEVEL_PARSO='INFO'
LOGLEVEL_PY_WARNINGS='NOTSET'
LOGLEVEL_REQUESTS='NOTSET'
LOGLEVEL_REQUESTS_PACKAGES_URLLIB3='NOTSET'
LOGLEVEL_RPY2='NOTSET'
LOGLEVEL_URLLIB3='NOTSET'
LOGLEVEL_URLLIB3_CONNECTIONPOOL='NOTSET'
LOGLEVEL_URLLIB3_UTIL_RETRY='NOTSET'
LOGLEVEL_UVICORN='NOTSET'
LOGLEVEL_UVICORN_ACCESS='NOTSET'
LOGLEVEL_UVICORN_ERROR='NOTSET'
LOGLEVEL_WATCHFILES='INFO'
LOGLEVEL_WERKZEUG='NOTSET'
